stages:
  - download
  - build
  - next

variables:
  GPG_KEY: "0482 D840 22F5 2DF1 C4E7 CD43 293A CD09 07D9 495A"
  ARC: x86_64
  VERSION: 3.9.4
  EXTRA_TAGS: 'latest 3.9'

download:
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  stage: download
  before_script:
    - apk add --no-cache gnupg curl grep
    - |
        gpg --keyserver pgp.mit.edu --recv-keys "${GPG_KEY}" ||
        gpg --keyserver keyserver.pgp.com --recv-keys "${GPG_KEY}" ||
        gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "${GPG_KEY}"
  script:
    - curl -OsS "https://ftp.acc.umu.se/mirror/alpinelinux.org/latest-stable/releases/${ARC}/alpine-minirootfs-${VERSION}-${ARC}.tar.gz"
    - curl -OsS "https://ftp.acc.umu.se/mirror/alpinelinux.org/latest-stable/releases/${ARC}/alpine-minirootfs-${VERSION}-${ARC}.tar.gz.sha256"
    - curl -OsS "https://ftp.acc.umu.se/mirror/alpinelinux.org/latest-stable/releases/${ARC}/alpine-minirootfs-${VERSION}-${ARC}.tar.gz.asc"
    - gpg --verify alpine-minirootfs-${VERSION}-${ARC}.tar.gz.asc alpine-minirootfs-${VERSION}-${ARC}.tar.gz
    - grep " alpine-minirootfs-${VERSION}-${ARC}.tar.gz\$" alpine-minirootfs-${VERSION}-${ARC}.tar.gz.sha256 | sha256sum -c -
    - mv alpine-minirootfs-${VERSION}-${ARC}.tar.gz alpine-minirootfs.tar.gz
  artifacts:
    paths:
      - alpine-minirootfs.tar.gz
    expire_in: 1 days

build:
  stage: build
  image: docker:latest
  dependencies:
    - download
  services:
    - docker:dind
  before_script:
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    - echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USER} --password-stdin
  script:
    - docker build --label "alpine.version=${VERSION}" -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} --build-arg VERSION=${VERSION} --build-arg ARC=${ARC} .
    - TAGS="${VERSION} ${EXTRA_TAGS}"
    - |
      for tag in ${TAGS}; do
        docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}:${tag}
        docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} jitesoft/alpine:${tag}
        docker push jitesoft/alpine:${tag}
        docker push ${CI_REGISTRY_IMAGE}:${tag}
      done
    - docker build -t ${IMAGE}/buildbase:${latest} -f buildbase.dockerfile .
    - docker push ${IMAGE}:latest
  tags:
    - jitesoft
